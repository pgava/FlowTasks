/*--------------------------------------------------------------
-- Use the next lines if you want to drop/create database

use [master]
go

drop database [FlowTasks]
go

create database [FlowTasks]
go

use [FlowTasks]
go
*/

IF (EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'Holiday'))
BEGIN
	RAISERROR ('The database is not empty, please drop the database before running this script', 15, 1)
END


/*--------------------------------------------------------------

CREATE DATABASE

--------------------------------------------------------------*/

CREATE TABLE [dbo].[Holiday] (
    [HolidayId] [int] NOT NULL IDENTITY,
    [User] [nvarchar](16),
    [Year] [int] NOT NULL,
    [Status] [nvarchar](1) NOT NULL,
    [HolidayTypeId] [int] NOT NULL,
    [Dates] [nvarchar](200) NOT NULL,
    CONSTRAINT [PK_dbo.Holiday] PRIMARY KEY ([HolidayId])
)
CREATE INDEX [IX_HolidayTypeId] ON [dbo].[Holiday]([HolidayTypeId])
CREATE TABLE [dbo].[HolidayType] (
    [HolidayTypeId] [int] NOT NULL IDENTITY,
    [Type] [nvarchar](20) NOT NULL,
    [Description] [nvarchar](200),
    CONSTRAINT [PK_dbo.HolidayType] PRIMARY KEY ([HolidayTypeId])
)
CREATE TABLE [dbo].[Property] (
    [PropertyId] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](200) NOT NULL,
    [Value] [nvarchar](200),
    [Type] [nvarchar](20),
    CONSTRAINT [PK_dbo.Property] PRIMARY KEY ([PropertyId])
)
CREATE TABLE [dbo].[SketchConfiguration] (
    [SketchConfigurationId] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](200),
    [XamlxOid] [uniqueidentifier] NOT NULL,
    [LastSavedOn] [datetime] NOT NULL,
    [ChangedBy] [nvarchar](16),
    [SketchStatusId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.SketchConfiguration] PRIMARY KEY ([SketchConfigurationId])
)
CREATE INDEX [IX_SketchStatusId] ON [dbo].[SketchConfiguration]([SketchStatusId])
CREATE TABLE [dbo].[SketchStatus] (
    [SketchStatusId] [int] NOT NULL IDENTITY,
    [Status] [nvarchar](20) NOT NULL,
    [Description] [nvarchar](200),
    CONSTRAINT [PK_dbo.SketchStatus] PRIMARY KEY ([SketchStatusId])
)
CREATE TABLE [dbo].[TaskConfiguration] (
    [TaskConfigurationId] [int] NOT NULL IDENTITY,
    [TaskCode] [nvarchar](20),
    [Title] [nvarchar](200),
    [Description] [nvarchar](500),
    [CanBeHandedOver] [bit] NOT NULL,
    [HandOverUsers] [nvarchar](200),
    [AssignedToUsers] [nvarchar](200),
    [UiCode] [nvarchar](20),
    [DefaultResult] [nvarchar](20),
    [WorkflowCodeId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TaskConfiguration] PRIMARY KEY ([TaskConfigurationId])
)
CREATE INDEX [IX_WorkflowCodeId] ON [dbo].[TaskConfiguration]([WorkflowCodeId])
CREATE TABLE [dbo].[WorkflowCode] (
    [WorkflowCodeId] [int] NOT NULL IDENTITY,
    [Code] [nvarchar](50) NOT NULL,
    [Description] [nvarchar](200),
    CONSTRAINT [PK_dbo.WorkflowCode] PRIMARY KEY ([WorkflowCodeId])
)
CREATE TABLE [dbo].[TaskDefinition] (
    [TaskDefinitionId] [int] NOT NULL IDENTITY,
    [TaskOid] [uniqueidentifier] NOT NULL,
    [TaskCorrelationId] [int] NOT NULL,
    [TaskCode] [nvarchar](50) NOT NULL,
    [UiCode] [nvarchar](200) NOT NULL,
    [Title] [nvarchar](200),
    [Description] [nvarchar](500),
    [DefaultResult] [nvarchar](20),
    [ExpiryDate] [datetime],
    [AcceptedOn] [datetime],
    [AcceptedBy] [nvarchar](16),
    [CompletedOn] [datetime],
    [AcceptUser] [nvarchar](16),
    [CanBeHandedOver] [bit] NOT NULL,
    [HandedOverStatus] [nvarchar](20),
    [WorkflowDefinitionId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TaskDefinition] PRIMARY KEY ([TaskDefinitionId])
)
CREATE INDEX [IX_WorkflowDefinitionId] ON [dbo].[TaskDefinition]([WorkflowDefinitionId])
CREATE TABLE [dbo].[WorkflowDefinition] (
    [WorkflowDefinitionId] [int] NOT NULL IDENTITY,
    [WorkflowOid] [uniqueidentifier] NOT NULL,
    [CompletedOn] [datetime],
    [StartedOn] [datetime] NOT NULL,
    [Domain] [nvarchar](50),
    [WorkflowParentDefinitionId] [int],
    [WorkflowCodeId] [int] NOT NULL,
    [WorkflowStatusId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.WorkflowDefinition] PRIMARY KEY ([WorkflowDefinitionId])
)
CREATE INDEX [IX_WorkflowParentDefinitionId] ON [dbo].[WorkflowDefinition]([WorkflowParentDefinitionId])
CREATE INDEX [IX_WorkflowCodeId] ON [dbo].[WorkflowDefinition]([WorkflowCodeId])
CREATE INDEX [IX_WorkflowStatusId] ON [dbo].[WorkflowDefinition]([WorkflowStatusId])
CREATE TABLE [dbo].[WorkflowStatus] (
    [WorkflowStatusId] [int] NOT NULL IDENTITY,
    [Status] [nvarchar](20) NOT NULL,
    [Description] [nvarchar](200),
    CONSTRAINT [PK_dbo.WorkflowStatus] PRIMARY KEY ([WorkflowStatusId])
)
CREATE TABLE [dbo].[TaskInParameter] (
    [TaskInParameterId] [int] NOT NULL IDENTITY,
    [PropertyId] [int] NOT NULL,
    [TaskDefinitionId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TaskInParameter] PRIMARY KEY ([TaskInParameterId])
)
CREATE INDEX [IX_PropertyId] ON [dbo].[TaskInParameter]([PropertyId])
CREATE INDEX [IX_TaskDefinitionId] ON [dbo].[TaskInParameter]([TaskDefinitionId])
CREATE TABLE [dbo].[TaskOutParameter] (
    [TaskOutParameterId] [int] NOT NULL IDENTITY,
    [PropertyId] [int] NOT NULL,
    [TaskDefinitionId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TaskOutParameter] PRIMARY KEY ([TaskOutParameterId])
)
CREATE INDEX [IX_PropertyId] ON [dbo].[TaskOutParameter]([PropertyId])
CREATE INDEX [IX_TaskDefinitionId] ON [dbo].[TaskOutParameter]([TaskDefinitionId])
CREATE TABLE [dbo].[TaskProperty] (
    [TaskPropertyId] [int] NOT NULL IDENTITY,
    [TaskCode] [nvarchar](20) NOT NULL,
    [PropertyId] [int] NOT NULL,
    [WorkflowCodeId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TaskProperty] PRIMARY KEY ([TaskPropertyId])
)
CREATE INDEX [IX_PropertyId] ON [dbo].[TaskProperty]([PropertyId])
CREATE INDEX [IX_WorkflowCodeId] ON [dbo].[TaskProperty]([WorkflowCodeId])
CREATE TABLE [dbo].[TaskUserHandOver] (
    [TaskUserHandOverId] [int] NOT NULL IDENTITY,
    [User] [nvarchar](16) NOT NULL,
    [InUse] [bit] NOT NULL,
    [TaskDefinitionId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TaskUserHandOver] PRIMARY KEY ([TaskUserHandOverId])
)
CREATE INDEX [IX_TaskDefinitionId] ON [dbo].[TaskUserHandOver]([TaskDefinitionId])
CREATE TABLE [dbo].[TaskUser] (
    [TaskUserId] [int] NOT NULL IDENTITY,
    [User] [nvarchar](16) NOT NULL,
    [InUse] [bit] NOT NULL,
    [TaskDefinitionId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TaskUser] PRIMARY KEY ([TaskUserId])
)
CREATE INDEX [IX_TaskDefinitionId] ON [dbo].[TaskUser]([TaskDefinitionId])
CREATE TABLE [dbo].[TopicAttachment] (
    [TopicAttachmentId] [int] NOT NULL IDENTITY,
    [FileName] [nvarchar](200),
    [OidDocument] [uniqueidentifier] NOT NULL,
    [TopicMessageId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TopicAttachment] PRIMARY KEY ([TopicAttachmentId])
)
CREATE INDEX [IX_TopicMessageId] ON [dbo].[TopicAttachment]([TopicMessageId])
CREATE TABLE [dbo].[TopicMessage] (
    [TopicMessageId] [int] NOT NULL IDENTITY,
    [Message] [nvarchar](500),
    [From] [nvarchar](20),
    [To] [nvarchar](200),
    [When] [datetime] NOT NULL,
    [IsTopic] [bit] NOT NULL,
    [TopicId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TopicMessage] PRIMARY KEY ([TopicMessageId])
)
CREATE INDEX [IX_TopicId] ON [dbo].[TopicMessage]([TopicId])
CREATE TABLE [dbo].[Topic] (
    [TopicId] [int] NOT NULL IDENTITY,
    [Title] [nvarchar](200),
    [LastChanged] [datetime] NOT NULL,
    CONSTRAINT [PK_dbo.Topic] PRIMARY KEY ([TopicId])
)
CREATE TABLE [dbo].[TopicStatus] (
    [TopicStatusId] [int] NOT NULL IDENTITY,
    [Status] [nvarchar](20) NOT NULL,
    [Description] [nvarchar](200),
    CONSTRAINT [PK_dbo.TopicStatus] PRIMARY KEY ([TopicStatusId])
)
CREATE TABLE [dbo].[TopicUser] (
    [TopicUserId] [int] NOT NULL IDENTITY,
    [User] [nvarchar](16) NOT NULL,
    [TopicMessageId] [int] NOT NULL,
    [TopicStatusId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.TopicUser] PRIMARY KEY ([TopicUserId])
)
CREATE INDEX [IX_TopicMessageId] ON [dbo].[TopicUser]([TopicMessageId])
CREATE INDEX [IX_TopicStatusId] ON [dbo].[TopicUser]([TopicStatusId])
CREATE TABLE [dbo].[TraceEvent] (
    [TraceEventId] [int] NOT NULL IDENTITY,
    [Type] [nvarchar](20) NOT NULL,
    [Description] [nvarchar](200),
    CONSTRAINT [PK_dbo.TraceEvent] PRIMARY KEY ([TraceEventId])
)
CREATE TABLE [dbo].[WorkflowConfiguration] (
    [WorkflowConfigurationId] [int] NOT NULL IDENTITY,
    [ServiceDefinition] [nvarchar](max),
    [ServiceUrl] [nvarchar](256),
    [BindingConfiguration] [nvarchar](50),
    [ServiceEndpoint] [nvarchar](50),
    [EffectiveDate] [datetime] NOT NULL,
    [ExpiryDate] [datetime],
    [WorkflowCodeId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.WorkflowConfiguration] PRIMARY KEY ([WorkflowConfigurationId])
)
CREATE INDEX [IX_WorkflowCodeId] ON [dbo].[WorkflowConfiguration]([WorkflowCodeId])
CREATE TABLE [dbo].[WorkflowInParameter] (
    [WorkflowInParameterId] [int] NOT NULL IDENTITY,
    [PropertyId] [int] NOT NULL,
    [WorkflowDefinitionId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.WorkflowInParameter] PRIMARY KEY ([WorkflowInParameterId])
)
CREATE INDEX [IX_PropertyId] ON [dbo].[WorkflowInParameter]([PropertyId])
CREATE INDEX [IX_WorkflowDefinitionId] ON [dbo].[WorkflowInParameter]([WorkflowDefinitionId])
CREATE TABLE [dbo].[WorkflowOutParameter] (
    [WorkflowOutParameterId] [int] NOT NULL IDENTITY,
    [PropertyId] [int] NOT NULL,
    [WorkflowDefinitionId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.WorkflowOutParameter] PRIMARY KEY ([WorkflowOutParameterId])
)
CREATE INDEX [IX_PropertyId] ON [dbo].[WorkflowOutParameter]([PropertyId])
CREATE INDEX [IX_WorkflowDefinitionId] ON [dbo].[WorkflowOutParameter]([WorkflowDefinitionId])
CREATE TABLE [dbo].[WorkflowProperty] (
    [WorkflowPropertyId] [int] NOT NULL IDENTITY,
    [Domain] [nvarchar](50),
    [WorkflowCodeId] [int] NOT NULL,
    [PropertyId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.WorkflowProperty] PRIMARY KEY ([WorkflowPropertyId])
)
CREATE INDEX [IX_WorkflowCodeId] ON [dbo].[WorkflowProperty]([WorkflowCodeId])
CREATE INDEX [IX_PropertyId] ON [dbo].[WorkflowProperty]([PropertyId])
CREATE TABLE [dbo].[WorkflowTrace] (
    [WorkflowTraceId] [int] NOT NULL IDENTITY,
    [When] [datetime] NOT NULL,
    [User] [nvarchar](16),
    [Action] [nvarchar](20),
    [Result] [nvarchar](20),
    [Code] [nvarchar](20),
    [Message] [nvarchar](500),
    [WorkflowDefinitionId] [int] NOT NULL,
    [TraceEventId] [int] NOT NULL,
    CONSTRAINT [PK_dbo.WorkflowTrace] PRIMARY KEY ([WorkflowTraceId])
)
CREATE INDEX [IX_WorkflowDefinitionId] ON [dbo].[WorkflowTrace]([WorkflowDefinitionId])
CREATE INDEX [IX_TraceEventId] ON [dbo].[WorkflowTrace]([TraceEventId])
ALTER TABLE [dbo].[Holiday] ADD CONSTRAINT [FK_dbo.Holiday_dbo.HolidayType_HolidayTypeId] FOREIGN KEY ([HolidayTypeId]) REFERENCES [dbo].[HolidayType] ([HolidayTypeId]) ON DELETE CASCADE
ALTER TABLE [dbo].[SketchConfiguration] ADD CONSTRAINT [FK_dbo.SketchConfiguration_dbo.SketchStatus_SketchStatusId] FOREIGN KEY ([SketchStatusId]) REFERENCES [dbo].[SketchStatus] ([SketchStatusId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskConfiguration] ADD CONSTRAINT [FK_dbo.TaskConfiguration_dbo.WorkflowCode_WorkflowCodeId] FOREIGN KEY ([WorkflowCodeId]) REFERENCES [dbo].[WorkflowCode] ([WorkflowCodeId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskDefinition] ADD CONSTRAINT [FK_dbo.TaskDefinition_dbo.WorkflowDefinition_WorkflowDefinitionId] FOREIGN KEY ([WorkflowDefinitionId]) REFERENCES [dbo].[WorkflowDefinition] ([WorkflowDefinitionId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowDefinition] ADD CONSTRAINT [FK_dbo.WorkflowDefinition_dbo.WorkflowCode_WorkflowCodeId] FOREIGN KEY ([WorkflowCodeId]) REFERENCES [dbo].[WorkflowCode] ([WorkflowCodeId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowDefinition] ADD CONSTRAINT [FK_dbo.WorkflowDefinition_dbo.WorkflowDefinition_WorkflowParentDefinitionId] FOREIGN KEY ([WorkflowParentDefinitionId]) REFERENCES [dbo].[WorkflowDefinition] ([WorkflowDefinitionId])
ALTER TABLE [dbo].[WorkflowDefinition] ADD CONSTRAINT [FK_dbo.WorkflowDefinition_dbo.WorkflowStatus_WorkflowStatusId] FOREIGN KEY ([WorkflowStatusId]) REFERENCES [dbo].[WorkflowStatus] ([WorkflowStatusId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskInParameter] ADD CONSTRAINT [FK_dbo.TaskInParameter_dbo.Property_PropertyId] FOREIGN KEY ([PropertyId]) REFERENCES [dbo].[Property] ([PropertyId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskInParameter] ADD CONSTRAINT [FK_dbo.TaskInParameter_dbo.TaskDefinition_TaskDefinitionId] FOREIGN KEY ([TaskDefinitionId]) REFERENCES [dbo].[TaskDefinition] ([TaskDefinitionId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskOutParameter] ADD CONSTRAINT [FK_dbo.TaskOutParameter_dbo.Property_PropertyId] FOREIGN KEY ([PropertyId]) REFERENCES [dbo].[Property] ([PropertyId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskOutParameter] ADD CONSTRAINT [FK_dbo.TaskOutParameter_dbo.TaskDefinition_TaskDefinitionId] FOREIGN KEY ([TaskDefinitionId]) REFERENCES [dbo].[TaskDefinition] ([TaskDefinitionId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskProperty] ADD CONSTRAINT [FK_dbo.TaskProperty_dbo.Property_PropertyId] FOREIGN KEY ([PropertyId]) REFERENCES [dbo].[Property] ([PropertyId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskProperty] ADD CONSTRAINT [FK_dbo.TaskProperty_dbo.WorkflowCode_WorkflowCodeId] FOREIGN KEY ([WorkflowCodeId]) REFERENCES [dbo].[WorkflowCode] ([WorkflowCodeId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskUserHandOver] ADD CONSTRAINT [FK_dbo.TaskUserHandOver_dbo.TaskDefinition_TaskDefinitionId] FOREIGN KEY ([TaskDefinitionId]) REFERENCES [dbo].[TaskDefinition] ([TaskDefinitionId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TaskUser] ADD CONSTRAINT [FK_dbo.TaskUser_dbo.TaskDefinition_TaskDefinitionId] FOREIGN KEY ([TaskDefinitionId]) REFERENCES [dbo].[TaskDefinition] ([TaskDefinitionId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TopicAttachment] ADD CONSTRAINT [FK_dbo.TopicAttachment_dbo.TopicMessage_TopicMessageId] FOREIGN KEY ([TopicMessageId]) REFERENCES [dbo].[TopicMessage] ([TopicMessageId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TopicMessage] ADD CONSTRAINT [FK_dbo.TopicMessage_dbo.Topic_TopicId] FOREIGN KEY ([TopicId]) REFERENCES [dbo].[Topic] ([TopicId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TopicUser] ADD CONSTRAINT [FK_dbo.TopicUser_dbo.TopicMessage_TopicMessageId] FOREIGN KEY ([TopicMessageId]) REFERENCES [dbo].[TopicMessage] ([TopicMessageId]) ON DELETE CASCADE
ALTER TABLE [dbo].[TopicUser] ADD CONSTRAINT [FK_dbo.TopicUser_dbo.TopicStatus_TopicStatusId] FOREIGN KEY ([TopicStatusId]) REFERENCES [dbo].[TopicStatus] ([TopicStatusId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowConfiguration] ADD CONSTRAINT [FK_dbo.WorkflowConfiguration_dbo.WorkflowCode_WorkflowCodeId] FOREIGN KEY ([WorkflowCodeId]) REFERENCES [dbo].[WorkflowCode] ([WorkflowCodeId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowInParameter] ADD CONSTRAINT [FK_dbo.WorkflowInParameter_dbo.Property_PropertyId] FOREIGN KEY ([PropertyId]) REFERENCES [dbo].[Property] ([PropertyId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowInParameter] ADD CONSTRAINT [FK_dbo.WorkflowInParameter_dbo.WorkflowDefinition_WorkflowDefinitionId] FOREIGN KEY ([WorkflowDefinitionId]) REFERENCES [dbo].[WorkflowDefinition] ([WorkflowDefinitionId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowOutParameter] ADD CONSTRAINT [FK_dbo.WorkflowOutParameter_dbo.Property_PropertyId] FOREIGN KEY ([PropertyId]) REFERENCES [dbo].[Property] ([PropertyId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowOutParameter] ADD CONSTRAINT [FK_dbo.WorkflowOutParameter_dbo.WorkflowDefinition_WorkflowDefinitionId] FOREIGN KEY ([WorkflowDefinitionId]) REFERENCES [dbo].[WorkflowDefinition] ([WorkflowDefinitionId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowProperty] ADD CONSTRAINT [FK_dbo.WorkflowProperty_dbo.Property_PropertyId] FOREIGN KEY ([PropertyId]) REFERENCES [dbo].[Property] ([PropertyId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowProperty] ADD CONSTRAINT [FK_dbo.WorkflowProperty_dbo.WorkflowCode_WorkflowCodeId] FOREIGN KEY ([WorkflowCodeId]) REFERENCES [dbo].[WorkflowCode] ([WorkflowCodeId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowTrace] ADD CONSTRAINT [FK_dbo.WorkflowTrace_dbo.TraceEvent_TraceEventId] FOREIGN KEY ([TraceEventId]) REFERENCES [dbo].[TraceEvent] ([TraceEventId]) ON DELETE CASCADE
ALTER TABLE [dbo].[WorkflowTrace] ADD CONSTRAINT [FK_dbo.WorkflowTrace_dbo.WorkflowDefinition_WorkflowDefinitionId] FOREIGN KEY ([WorkflowDefinitionId]) REFERENCES [dbo].[WorkflowDefinition] ([WorkflowDefinitionId]) ON DELETE CASCADE
CREATE TABLE [dbo].[__MigrationHistory] (
    [MigrationId] [nvarchar](150) NOT NULL,
    [ContextKey] [nvarchar](300) NOT NULL,
    [Model] [varbinary](max) NOT NULL,
    [ProductVersion] [nvarchar](32) NOT NULL,
    CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
)
INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
VALUES (N'201408200346588_CreateDatabase', N'Flow.Tasks.Data.Migrations.Configuration',  


CREATE FULLTEXT CATALOG [Topic] WITH ACCENT_SENSITIVITY = ON AS DEFAULT

CREATE FULLTEXT INDEX ON TopicMessage(Message)
KEY INDEX [pk_dbo.TopicMessage] 
	ON Topic

INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
VALUES (N'201408200355029_FullTextIndex', N'Flow.Tasks.Data.Migrations.Configuration',  


exec sp_executesql N'INSERT [dbo].[HolidayType]([Type], [Description])
VALUES (@0, @1)
SELECT [HolidayTypeId]
FROM [dbo].[HolidayType]
WHERE @@ROWCOUNT > 0 AND [HolidayTypeId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Public',@1=N'Public holiday'
go
exec sp_executesql N'INSERT [dbo].[HolidayType]([Type], [Description])
VALUES (@0, @1)
SELECT [HolidayTypeId]
FROM [dbo].[HolidayType]
WHERE @@ROWCOUNT > 0 AND [HolidayTypeId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Annual',@1=N'Annual leave'
go
exec sp_executesql N'INSERT [dbo].[HolidayType]([Type], [Description])
VALUES (@0, @1)
SELECT [HolidayTypeId]
FROM [dbo].[HolidayType]
WHERE @@ROWCOUNT > 0 AND [HolidayTypeId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Sick',@1=N'Sick leave'
go
exec sp_executesql N'INSERT [dbo].[Holiday]([User], [Year], [Status], [HolidayTypeId], [Dates])
VALUES (NULL, @0, @1, @2, @3)
SELECT [HolidayId]
FROM [dbo].[Holiday]
WHERE @@ROWCOUNT > 0 AND [HolidayId] = scope_identity()',N'@0 int,@1 nvarchar(1),@2 int,@3 nvarchar(200)',@0=2014,@1=N'A',@2=1,@3=N'01/01/2014,27/01/2014,25/04/2014,09/06/2014,06/10/2014,25/12/2014,26/12/2014'
go
exec sp_executesql N'INSERT [dbo].[Holiday]([User], [Year], [Status], [HolidayTypeId], [Dates])
VALUES (NULL, @0, @1, @2, @3)
SELECT [HolidayId]
FROM [dbo].[Holiday]
WHERE @@ROWCOUNT > 0 AND [HolidayId] = scope_identity()',N'@0 int,@1 nvarchar(1),@2 int,@3 nvarchar(200)',@0=2015,@1=N'A',@2=1,@3=N'01/01/2015,26/01/2015,25/04/2015,08/06/2015,05/10/2015,25/12/2015,28/12/2015'
go
exec sp_executesql N'INSERT [dbo].[Holiday]([User], [Year], [Status], [HolidayTypeId], [Dates])
VALUES (NULL, @0, @1, @2, @3)
SELECT [HolidayId]
FROM [dbo].[Holiday]
WHERE @@ROWCOUNT > 0 AND [HolidayId] = scope_identity()',N'@0 int,@1 nvarchar(1),@2 int,@3 nvarchar(200)',@0=2016,@1=N'A',@2=1,@3=N'01/01/2016,26/01/2016,25/04/2016,13/06/2016,03/10/2016,26/12/2016,27/12/2016'
go
exec sp_executesql N'INSERT [dbo].[SketchStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [SketchStatusId]
FROM [dbo].[SketchStatus]
WHERE @@ROWCOUNT > 0 AND [SketchStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Aborted',@1=N'Abort workflow deployment'
go
exec sp_executesql N'INSERT [dbo].[SketchStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [SketchStatusId]
FROM [dbo].[SketchStatus]
WHERE @@ROWCOUNT > 0 AND [SketchStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'DeployedDev',@1=N'Deployed to dev'
go
exec sp_executesql N'INSERT [dbo].[SketchStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [SketchStatusId]
FROM [dbo].[SketchStatus]
WHERE @@ROWCOUNT > 0 AND [SketchStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'DeployedProd',@1=N'Deployed to prod'
go
exec sp_executesql N'INSERT [dbo].[SketchStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [SketchStatusId]
FROM [dbo].[SketchStatus]
WHERE @@ROWCOUNT > 0 AND [SketchStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Saved',@1=N'Sketch Saved'
go
exec sp_executesql N'INSERT [dbo].[SketchStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [SketchStatusId]
FROM [dbo].[SketchStatus]
WHERE @@ROWCOUNT > 0 AND [SketchStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'SentToSketch',@1=N'Sent To Sketch'
go
exec sp_executesql N'INSERT [dbo].[TopicStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [TopicStatusId]
FROM [dbo].[TopicStatus]
WHERE @@ROWCOUNT > 0 AND [TopicStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'New',@1=N'New topic message'
go
exec sp_executesql N'INSERT [dbo].[TopicStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [TopicStatusId]
FROM [dbo].[TopicStatus]
WHERE @@ROWCOUNT > 0 AND [TopicStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Read',@1=N'Read topic message'
go
exec sp_executesql N'INSERT [dbo].[TraceEvent]([Type], [Description])
VALUES (@0, @1)
SELECT [TraceEventId]
FROM [dbo].[TraceEvent]
WHERE @@ROWCOUNT > 0 AND [TraceEventId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Debug',@1=N'Debug'
go
exec sp_executesql N'INSERT [dbo].[TraceEvent]([Type], [Description])
VALUES (@0, @1)
SELECT [TraceEventId]
FROM [dbo].[TraceEvent]
WHERE @@ROWCOUNT > 0 AND [TraceEventId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Activity',@1=N'Activity'
go
exec sp_executesql N'INSERT [dbo].[TraceEvent]([Type], [Description])
VALUES (@0, @1)
SELECT [TraceEventId]
FROM [dbo].[TraceEvent]
WHERE @@ROWCOUNT > 0 AND [TraceEventId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Error',@1=N'Error'
go
exec sp_executesql N'INSERT [dbo].[TraceEvent]([Type], [Description])
VALUES (@0, @1)
SELECT [TraceEventId]
FROM [dbo].[TraceEvent]
WHERE @@ROWCOUNT > 0 AND [TraceEventId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Info',@1=N'Info'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf1',@1=N'this is a sample wf code for testing (1)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf2',@1=N'this is a sample wf code for testing (2)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf3',@1=N'this is a sample wf code for testing (3)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf4',@1=N'this is a sample wf code for testing (4)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf4a',@1=N'this is a sample wf code for testing (4a)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf5',@1=N'this is a sample wf code for testing (5)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf6',@1=N'this is a sample wf code for testing (6)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf7',@1=N'this is a sample wf code for testing (7)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf8',@1=N'this is a sample wf code for testing (8)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowCode]([Code], [Description])
VALUES (@0, @1)
SELECT [WorkflowCodeId]
FROM [dbo].[WorkflowCode]
WHERE @@ROWCOUNT > 0 AND [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(50),@1 nvarchar(200)',@0=N'SampleWf9',@1=N'this is a sample wf code for testing (9)'
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SampleWf1.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations1',@3='2014-05-14 22:29:06.2751714',@4=1
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SampleWf2.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations2',@3='2014-05-14 22:29:06.2761714',@4=2
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SampleWf3.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations3',@3='2014-05-14 22:29:06.2761714',@4=3
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SampleWf4.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations4',@3='2014-05-14 22:29:06.2761714',@4=4
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SampleWf4a.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations4a',@3='2014-05-14 22:29:06.2761714',@4=5
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SampleWf5.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations5',@3='2014-05-14 22:29:06.2761714',@4=6
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SampleWf6.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations6',@3='2014-05-14 22:29:06.2761714',@4=7
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SampleWf7.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations7',@3='2014-05-14 22:29:06.2761714',@4=8
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/ServiceWorkflowsVB/SampleWf8.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations8',@3='2014-05-14 22:29:06.2761714',@4=9
go
exec sp_executesql N'INSERT [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
VALUES (NULL, @0, @1, @2, @3, NULL, @4)
SELECT [WorkflowConfigurationId]
FROM [dbo].[WorkflowConfiguration]
WHERE @@ROWCOUNT > 0 AND [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(256),@1 nvarchar(50),@2 nvarchar(50),@3 datetime2(7),@4 int',@0=N'http://localhost/ServiceWorkflowsVB/SampleWf9.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'BasicHttpBinding_IFlowTasksOperations9',@3='2014-05-14 22:29:06.2761714',@4=10
go
exec sp_executesql N'INSERT [dbo].[WorkflowStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [WorkflowStatusId]
FROM [dbo].[WorkflowStatus]
WHERE @@ROWCOUNT > 0 AND [WorkflowStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Completed',@1=N'Completed'
go
exec sp_executesql N'INSERT [dbo].[WorkflowStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [WorkflowStatusId]
FROM [dbo].[WorkflowStatus]
WHERE @@ROWCOUNT > 0 AND [WorkflowStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Aborted',@1=N'Aborted'
go
exec sp_executesql N'INSERT [dbo].[WorkflowStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [WorkflowStatusId]
FROM [dbo].[WorkflowStatus]
WHERE @@ROWCOUNT > 0 AND [WorkflowStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'InProgress',@1=N'InProgress'
go
exec sp_executesql N'INSERT [dbo].[WorkflowStatus]([Status], [Description])
VALUES (@0, @1)
SELECT [WorkflowStatusId]
FROM [dbo].[WorkflowStatus]
WHERE @@ROWCOUNT > 0 AND [WorkflowStatusId] = scope_identity()',N'@0 nvarchar(20),@1 nvarchar(200)',@0=N'Terminated',@1=N'Terminated'
go

/*--------------------------------------------------------------

CREATE SKETCH

--------------------------------------------------------------*/

exec sp_executesql N'insert [dbo].[WorkflowCode]([Code], [Description])
values (@0, @1)
select [WorkflowCodeId]
from [dbo].[WorkflowCode]
where @@ROWCOUNT > 0 and [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(max) ,@1 nvarchar(max) ',@0=N'SketchWf',@1=N'Sketch Workflow'

declare @wc int
select @wc = (
	select WorkflowCodeId
	from WorkflowCode
	where Code = 'SketchWf'
)

exec sp_executesql N'insert [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
values (null, @0, @1, @2, @3, null, @4)
select [WorkflowConfigurationId]
from [dbo].[WorkflowConfiguration]
where @@ROWCOUNT > 0 and [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(max) ,@1 nvarchar(max) ,@2 nvarchar(max) ,@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/SketchWf.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'',@3='2013-01-01 08:30:00.0000000',@4=@wc
go

exec sp_executesql N'insert [dbo].[Property]([Name], [Value], [Type])
values (@0, @1, @2)
select [PropertyId]
from [dbo].[Property]
where @@ROWCOUNT > 0 and [PropertyId] = scope_identity()',N'@0 nvarchar(max) ,@1 nvarchar(max) ,@2 nvarchar(max)',@0=N'SketchWorkflowUrl',@1=N'http://localhost/Flow.Tasks.Workflows/' ,@2=N'S'

exec sp_executesql N'insert [dbo].[Property]([Name], [Value], [Type])
values (@0, @1, @2)
select [PropertyId]
from [dbo].[Property]
where @@ROWCOUNT > 0 and [PropertyId] = scope_identity()',N'@0 nvarchar(max) ,@1 nvarchar(max) ,@2 nvarchar(max)',@0=N'SketchWorkflowPath',@1=N'C:\Dev\Codeplex\FlowTasks\src\Workflows\ServiceWorkflows\' ,@2=N'S'
go

declare @wc int
select @wc = (
	select WorkflowCodeId
	from WorkflowCode
	where Code = 'SketchWf'
)

declare @wfurlp int
select @wfurlp = (
	select PropertyId
	from Property
	where Name = 'SketchWorkflowUrl'
)

declare @wfpathp int
select @wfpathp = (
	select PropertyId
	from Property
	where Name = 'SketchWorkflowPath'
)

exec sp_executesql N'insert [dbo].[WorkflowProperty]([Domain], [WorkflowCodeId], [PropertyId])
values (null, @0, @1)
select [WorkflowPropertyId]
from [dbo].[WorkflowProperty]
where @@ROWCOUNT > 0 and [WorkflowPropertyId] = scope_identity()',N'@0 int ,@1 int',@0=@wc ,@1=@wfurlp

exec sp_executesql N'insert [dbo].[WorkflowProperty]([Domain], [WorkflowCodeId], [PropertyId])
values (null, @0, @1)
select [WorkflowPropertyId]
from [dbo].[WorkflowProperty]
where @@ROWCOUNT > 0 and [WorkflowPropertyId] = scope_identity()',N'@0 int ,@1 int',@0=@wc ,@1=@wfpathp


/*--------------------------------------------------------------

CREATE HOLIDAY

--------------------------------------------------------------*/

exec sp_executesql N'insert [dbo].[WorkflowCode]([Code], [Description])
values (@0, @1)
select [WorkflowCodeId]
from [dbo].[WorkflowCode]
where @@ROWCOUNT > 0 and [WorkflowCodeId] = scope_identity()',N'@0 nvarchar(max) ,@1 nvarchar(max) ',@0=N'HolidayWf',@1=N'Holiday Workflow'

declare @wch int
select @wch = (
	select WorkflowCodeId
	from WorkflowCode
	where Code = 'HolidayWf'
)

exec sp_executesql N'insert [dbo].[WorkflowConfiguration]([ServiceDefinition], [ServiceUrl], [BindingConfiguration], [ServiceEndpoint], [EffectiveDate], [ExpiryDate], [WorkflowCodeId])
values (null, @0, @1, @2, @3, null, @4)
select [WorkflowConfigurationId]
from [dbo].[WorkflowConfiguration]
where @@ROWCOUNT > 0 and [WorkflowConfigurationId] = scope_identity()',N'@0 nvarchar(max) ,@1 nvarchar(max) ,@2 nvarchar(max) ,@3 datetime2(7),@4 int',@0=N'http://localhost/Flow.Tasks.Workflows/HolidayWf.xamlx',@1=N'BasicHttpBinding_FlowTasks',@2=N'',@3='2013-01-01 08:30:00.0000000',@4=@wch
go

/*--------------------------------------------------------------

CREATE REPORTS

--------------------------------------------------------------*/

/****** Object:  StoredProcedure [dbo].[ReportTaskTime]    Script Date: 03/04/2013 08:40:29 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ReportTaskTime]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ReportTaskTime]
GO

/****** Object:  StoredProcedure [dbo].[ReportTaskTime]    Script Date: 03/04/2013 08:40:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create proc [dbo].[ReportTaskTime](
	@start as datetime,
	@end as datetime
	)
as
begin

select avg(datediff(SECOND, tcrt.[When], tcmp.[When])) as Duration, -- mi = minutes
	tcmp.Code as Task,
	wf.Code as Workflow
from 
	(
		select * from dbo.WorkflowTrace
		where Action in ('TaskCreated')
	) tcrt
	inner join 
		(
			select * from dbo.WorkflowTrace
			where Action in ('TaskCompleted') and
				Result not in ('Expired', 'Terminated')
		) tcmp
	on tcrt.Code = tcmp.Code and tcrt.WorkflowDefinitionId = tcmp.WorkflowDefinitionId
	inner join
	 (
		select wd.WorkflowDefinitionId, wc.Code from dbo.WorkflowDefinition wd
		inner join WorkflowCode wc
		on wd.WorkflowCodeId = wc.WorkflowCodeId		
	) wf 
	on tcmp.WorkflowDefinitionId = wf.WorkflowDefinitionId
where
	(@start is null or @start <= tcmp.[When]) and
	(@end is null or @end >= tcmp.[When])
group by tcmp.Code, wf.Code
order by tcmp.Code, wf.Code

end

GO

/****** Object:  StoredProcedure [dbo].[ReportUserTaskCount]    Script Date: 03/04/2013 08:37:53 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ReportUserTaskCount]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ReportUserTaskCount]
GO

/****** Object:  StoredProcedure [dbo].[ReportUserTaskCount]    Script Date: 03/04/2013 08:37:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create proc [dbo].[ReportUserTaskCount](
	@start as datetime,
	@end as datetime
	)
as
begin

select lower([User]) as [User], Code as Task, COUNT(*) as [Count] from WorkflowTrace
where Action = 'TaskCompleted' and
	Result not in ('Expired', 'Terminated') and
	(@start is null or @start <= WorkflowTrace.[When]) and
	(@end is null or @end >= WorkflowTrace.[When])	
group by lower([User]), Code

end

GO


/****** Object:  StoredProcedure [dbo].[ReportUserTasks]    Script Date: 03/04/2013 08:37:53 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ReportUserTasks]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ReportUserTasks]
GO

/****** Object:  StoredProcedure [dbo].[ReportUserTasks]    Script Date: 03/04/2013 08:37:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create proc [dbo].[ReportUserTasks](
	@start as datetime,
	@end as datetime
	)
as
begin

select lower([User]) as [User], COUNT(*) as TaskNo from WorkflowTrace
where Action = 'TaskCompleted' and
	Result not in ('Expired', 'Terminated') and
	(@start is null or @start <= WorkflowTrace.[When]) and
	(@end is null or @end >= WorkflowTrace.[When])
group by lower([User])

end

GO


/****** Object:  StoredProcedure [dbo].[ReportWorkflowTime]    Script Date: 03/04/2013 08:39:10 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ReportWorkflowTime]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ReportWorkflowTime]
GO

/****** Object:  StoredProcedure [dbo].[ReportWorkflowTime]    Script Date: 03/04/2013 08:39:10 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create proc [dbo].[ReportWorkflowTime](
	@start as datetime,
	@end as datetime
	)
as
begin

select avg(datediff(SECOND, tcrt.[When], tcmp.[When])) as Duration, -- mi = minutes
	tcmp.Code as Workflow
from 
	(
		select * from dbo.WorkflowTrace
		where Action in ('WorkflowCreated')
	) tcrt
	inner join 
		(
			select * from dbo.WorkflowTrace
			where Action in ('WorkflowCompleted') and
				Result not in ('Expired', 'Terminated')
		) tcmp
	on tcrt.Code = tcmp.Code and tcrt.WorkflowDefinitionId = tcmp.WorkflowDefinitionId
where
	(@start is null or @start <= tcmp.[When]) and
	(@end is null or @end >= tcmp.[When])	
group by tcmp.Code
order by tcmp.Code

end

GO


/*--------------------------------------------------------------

CREATE FULLTEXT TOPIC INDEX

--------------------------------------------------------------*/
--CREATE FULLTEXT CATALOG [Topic] WITH ACCENT_SENSITIVITY = ON AS DEFAULT
--GO

--CREATE FULLTEXT INDEX ON TopicMessage(Message)
--KEY INDEX [pk_dbo.TopicMessage] 
--	ON Topic
--GO

create function SearchTopicForUser
(
	@username nvarchar(16),
    @keywords nvarchar(4000)
)
returns table
as
  return (
	select m.[TopicId], m.[Message], KEY_TBL.[Rank]
	from TopicMessage m
		inner join containstable(TopicMessage, ([Message]),@keywords) AS KEY_TBL
			on m.TopicMessageId = KEY_TBL.[KEY]
		inner join TopicUser u 
			on m.TopicMessageId = u.TopicMessageId
	where u.[User] = @username
		  )

GO

